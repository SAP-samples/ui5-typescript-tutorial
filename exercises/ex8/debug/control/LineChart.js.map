{"version":3,"sources":["../../src/control/LineChart.ts"],"names":["Chart","LineChart","Control","renderer","apiVersion","render","rm","chart","openStart","style","getColor","openEnd","getId","close","metadata","properties","aggregations","type","defaultAggregation","constructor","id","settings","_getChartData","aRecords","getRecords","labels","map","record","getLabel","datasets","label","getTitle","backgroundColor","borderColor","data","getValue","onAfterRendering","_chart","getDomRef","options","responsive","update"],"mappings":";QAESA,K;AAET;AACA;AACA;;QACqBC,S,GAAkBC,O;AAsBtCC,IAAAA,Q,EAAW;AACVC,MAAAA,UAAU,EAAE,CADF;AAEVC,MAAAA,MAAM,EAAE,CAACC,EAAD,EAAoBC,KAApB,KAAyC;AAChDD,QAAAA,EAAE,CAACE,SAAH,CAAa,KAAb,EAAoBD,KAApB;AACAD,QAAAA,EAAE,CAACG,KAAH,CAAS,OAAT,EAAkBF,KAAK,CAACG,QAAN,EAAlB;AACAJ,QAAAA,EAAE,CAACG,KAAH,CAAS,SAAT,EAAoB,KAApB;AACAH,QAAAA,EAAE,CAACK,OAAH;AAEAL,QAAAA,EAAE,CAACE,SAAH,CAAa,QAAb,EAAuBD,KAAK,CAACK,KAAN,KAAgB,SAAvC;AACAN,QAAAA,EAAE,CAACK,OAAH;AACAL,QAAAA,EAAE,CAACO,KAAH,CAAS,QAAT;AAEAP,QAAAA,EAAE,CAACO,KAAH,CAAS,KAAT;AACA;AAbS,K;AAbKC,IAAAA,Q,EAAW;AAC1BC,MAAAA,UAAU,EAAE;AACX,iBAAS,QADE;AAEX,iBAAS;AAFE,OADc;AAK1BC,MAAAA,YAAY,EAAE;AACb,mBAAW;AACVC,UAAAA,IAAI,EAAE;AADI;AADE,OALY;AAU1BC,MAAAA,kBAAkB,EAAE;AAVM,K;AAF3BC,IAAAA,W,wBAAYC,E,EAAaC,Q,EAA+B;AAAE,+CAAMD,EAAN,EAAUC,QAAV;AAAsB,K;AA+BhFC,IAAAA,a,2BAAgB;AACf,YAAMC,QAAQ,GAAG,KAAKC,UAAL,EAAjB;AACA,aAAO;AACNC,QAAAA,MAAM,EAAEF,QAAQ,CAACG,GAAT,CAAaC,MAAM,IAAI;AAC9B,iBAAOA,MAAM,CAACC,QAAP,EAAP;AACA,SAFO,CADF;AAINC,QAAAA,QAAQ,EAAE,CAAC;AACVC,UAAAA,KAAK,EAAE,KAAKC,QAAL,EADG;AAEVC,UAAAA,eAAe,EAAE,KAAKtB,QAAL,EAFP;AAGVuB,UAAAA,WAAW,EAAE,KAAKvB,QAAL,EAHH;AAIVwB,UAAAA,IAAI,EAAEX,QAAQ,CAACG,GAAT,CAAaC,MAAM,IAAI;AAC5B,mBAAOA,MAAM,CAACQ,QAAP,EAAP;AACA,WAFK;AAJI,SAAD;AAJJ,OAAP;AAaA,K;AAEDC,IAAAA,gB,+BAAmB;AAClB,UAAI,CAAC,KAAKC,MAAV,EAAkB;AACjB,aAAKA,MAAL,GAAc,IAAIrC,KAAJ,CAAU,KAAKsC,SAAL,CAAe,QAAf,CAAV,EAAyD;AACtErB,UAAAA,IAAI,EAAE,MADgE;AAEtEiB,UAAAA,IAAI,EAAE,KAAKZ,aAAL,EAFgE;AAGtEiB,UAAAA,OAAO,EAAE;AACRC,YAAAA,UAAU,EAAE;AADJ;AAH6D,SAAzD,CAAd;AAOA,OARD,MAQO;AACN,aAAKH,MAAL,CAAYH,IAAZ,GAAmB,KAAKZ,aAAL,EAAnB;;AACA,aAAKe,MAAL,CAAYI,MAAZ;AACA;AACD;;SApEmBxC,S","sourcesContent":["import Control from \"sap/ui/core/Control\";\r\nimport RenderManager from \"sap/ui/core/RenderManager\";\r\nimport { Chart } from \"chart.js\";\r\n\r\n/**\r\n* @name com.myorg.myapp.control.LineChart\r\n*/\r\nexport default class LineChart extends Control {\r\n\r\n\tprivate _chart: Chart;\r\n\r\n\t// The following three lines were generated and should remain as-is to make TypeScript aware of the constructor signatures\r\n\tconstructor(idOrSettings?: string | $LineChartSettings);\r\n\tconstructor(id?: string, settings?: $LineChartSettings);\r\n\tconstructor(id?: string, settings?: $LineChartSettings) { super(id, settings); }\r\n\r\n\tstatic readonly metadata = {\r\n\t\tproperties: {\r\n\t\t\t\"title\": \"string\",\r\n\t\t\t\"color\": \"sap.ui.core.CSSColor\"\r\n\t\t},\r\n\t\taggregations: {\r\n\t\t\t\"records\": {\r\n\t\t\t\ttype: \"com.myorg.myapp.control.ChartRecord\"\r\n\t\t\t}\r\n\t\t},\r\n\t\tdefaultAggregation: \"records\"\r\n\t}\r\n\r\n\trenderer = {\r\n\t\tapiVersion: 2,\r\n\t\trender: (rm: RenderManager, chart: LineChart) => {\r\n\t\t\trm.openStart(\"div\", chart);\r\n\t\t\trm.style(\"color\", chart.getColor());\r\n\t\t\trm.style(\"padding\", \"2em\");\r\n\t\t\trm.openEnd();\r\n\r\n\t\t\trm.openStart(\"canvas\", chart.getId() + \"-canvas\");\r\n\t\t\trm.openEnd();\r\n\t\t\trm.close(\"canvas\");\r\n\r\n\t\t\trm.close(\"div\");\r\n\t\t}\r\n\t}\r\n\r\n\t_getChartData() {\r\n\t\tconst aRecords = this.getRecords();\r\n\t\treturn {\r\n\t\t\tlabels: aRecords.map(record => {\r\n\t\t\t\treturn record.getLabel();\r\n\t\t\t}),\r\n\t\t\tdatasets: [{\r\n\t\t\t\tlabel: this.getTitle(),\r\n\t\t\t\tbackgroundColor: this.getColor(),\r\n\t\t\t\tborderColor: this.getColor(),\r\n\t\t\t\tdata: aRecords.map(record => {\r\n\t\t\t\t\treturn record.getValue();\r\n\t\t\t\t})\r\n\t\t\t}]\r\n\t\t};\r\n\t}\r\n\r\n\tonAfterRendering() {\r\n\t\tif (!this._chart) {\r\n\t\t\tthis._chart = new Chart(this.getDomRef(\"canvas\") as HTMLCanvasElement, {\r\n\t\t\t\ttype: 'line',\r\n\t\t\t\tdata: this._getChartData(),\r\n\t\t\t\toptions: {\r\n\t\t\t\t\tresponsive: true\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis._chart.data = this._getChartData();\r\n\t\t\tthis._chart.update();\r\n\t\t}\r\n\t}\r\n}"],"file":"LineChart.js"}