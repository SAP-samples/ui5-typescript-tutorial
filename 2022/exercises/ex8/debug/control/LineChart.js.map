{"version":3,"file":"LineChart.js","names":["Chart","LineChart","Control","renderer","apiVersion","render","rm","chart","openStart","style","getColor","openEnd","getId","close","metadata","properties","aggregations","type","defaultAggregation","constructor","id","settings","_getChartData","aRecords","getRecords","labels","map","record","getLabel","datasets","label","getTitle","backgroundColor","borderColor","data","getValue","onAfterRendering","_chart","getDomRef","options","responsive","update"],"sources":["../../src/control/LineChart.ts"],"sourcesContent":["import Control from \"sap/ui/core/Control\";\nimport RenderManager from \"sap/ui/core/RenderManager\";\nimport Chart from \"chart.js/auto\";\n\n/**\n* @name com.myorg.myapp.control.LineChart\n*/\nexport default class LineChart extends Control {\n\n\tprivate _chart: Chart;\n\n\t// The following three lines were generated and should remain as-is to make TypeScript aware of the constructor signatures\n\tconstructor(idOrSettings?: string | $LineChartSettings);\n\tconstructor(id?: string, settings?: $LineChartSettings);\n\tconstructor(id?: string, settings?: $LineChartSettings) { super(id, settings); }\n\n\tstatic readonly metadata = {\n\t\tproperties: {\n\t\t\t\"title\": \"string\",\n\t\t\t\"color\": \"sap.ui.core.CSSColor\"\n\t\t},\n\t\taggregations: {\n\t\t\t\"records\": {\n\t\t\t\ttype: \"com.myorg.myapp.control.ChartRecord\"\n\t\t\t}\n\t\t},\n\t\tdefaultAggregation: \"records\"\n\t}\n\n\trenderer = {\n\t\tapiVersion: 2,\n\t\trender: (rm: RenderManager, chart: LineChart) => {\n\t\t\trm.openStart(\"div\", chart);\n\t\t\trm.style(\"color\", chart.getColor());\n\t\t\trm.style(\"padding\", \"2em\");\n\t\t\trm.openEnd();\n\n\t\t\trm.openStart(\"canvas\", chart.getId() + \"-canvas\");\n\t\t\trm.openEnd();\n\t\t\trm.close(\"canvas\");\n\n\t\t\trm.close(\"div\");\n\t\t}\n\t}\n\n\t_getChartData() {\n\t\tconst aRecords = this.getRecords();\n\t\treturn {\n\t\t\tlabels: aRecords.map(record => {\n\t\t\t\treturn record.getLabel();\n\t\t\t}),\n\t\t\tdatasets: [{\n\t\t\t\tlabel: this.getTitle(),\n\t\t\t\tbackgroundColor: this.getColor(),\n\t\t\t\tborderColor: this.getColor(),\n\t\t\t\tdata: aRecords.map(record => {\n\t\t\t\t\treturn record.getValue();\n\t\t\t\t})\n\t\t\t}]\n\t\t};\n\t}\n\n\tonAfterRendering() {\n\t\tif (!this._chart) {\n\t\t\tthis._chart = new Chart(this.getDomRef(\"canvas\") as HTMLCanvasElement, {\n\t\t\t\ttype: 'line',\n\t\t\t\tdata: this._getChartData(),\n\t\t\t\toptions: {\n\t\t\t\t\tresponsive: true\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis._chart.data = this._getChartData();\n\t\t\tthis._chart.update();\n\t\t}\n\t}\n}"],"mappings":";;;;;QAEOA,K;EAEP;AACA;AACA;;;QACqBC,S,GAAkBC,O;IAsBtCC,Q,EAAW;MACVC,UAAU,EAAE,CADF;MAEVC,MAAM,EAAE,CAACC,EAAD,EAAoBC,KAApB,KAAyC;QAChDD,EAAE,CAACE,SAAH,CAAa,KAAb,EAAoBD,KAApB;QACAD,EAAE,CAACG,KAAH,CAAS,OAAT,EAAkBF,KAAK,CAACG,QAAN,EAAlB;QACAJ,EAAE,CAACG,KAAH,CAAS,SAAT,EAAoB,KAApB;QACAH,EAAE,CAACK,OAAH;QAEAL,EAAE,CAACE,SAAH,CAAa,QAAb,EAAuBD,KAAK,CAACK,KAAN,KAAgB,SAAvC;QACAN,EAAE,CAACK,OAAH;QACAL,EAAE,CAACO,KAAH,CAAS,QAAT;QAEAP,EAAE,CAACO,KAAH,CAAS,KAAT;MACA;IAbS,C;IAbKC,Q,EAAW;MAC1BC,UAAU,EAAE;QACX,SAAS,QADE;QAEX,SAAS;MAFE,CADc;MAK1BC,YAAY,EAAE;QACb,WAAW;UACVC,IAAI,EAAE;QADI;MADE,CALY;MAU1BC,kBAAkB,EAAE;IAVM,C;IAF3BC,W,wBAAYC,E,EAAaC,Q,EAA+B;MAAE,yCAAMD,EAAN,EAAUC,QAAV;IAAsB,C;IA+BhFC,a,2BAAgB;MACf,MAAMC,QAAQ,GAAG,KAAKC,UAAL,EAAjB;MACA,OAAO;QACNC,MAAM,EAAEF,QAAQ,CAACG,GAAT,CAAaC,MAAM,IAAI;UAC9B,OAAOA,MAAM,CAACC,QAAP,EAAP;QACA,CAFO,CADF;QAINC,QAAQ,EAAE,CAAC;UACVC,KAAK,EAAE,KAAKC,QAAL,EADG;UAEVC,eAAe,EAAE,KAAKtB,QAAL,EAFP;UAGVuB,WAAW,EAAE,KAAKvB,QAAL,EAHH;UAIVwB,IAAI,EAAEX,QAAQ,CAACG,GAAT,CAAaC,MAAM,IAAI;YAC5B,OAAOA,MAAM,CAACQ,QAAP,EAAP;UACA,CAFK;QAJI,CAAD;MAJJ,CAAP;IAaA,C;IAEDC,gB,+BAAmB;MAClB,IAAI,CAAC,KAAKC,MAAV,EAAkB;QACjB,KAAKA,MAAL,GAAc,IAAIrC,KAAJ,CAAU,KAAKsC,SAAL,CAAe,QAAf,CAAV,EAAyD;UACtErB,IAAI,EAAE,MADgE;UAEtEiB,IAAI,EAAE,KAAKZ,aAAL,EAFgE;UAGtEiB,OAAO,EAAE;YACRC,UAAU,EAAE;UADJ;QAH6D,CAAzD,CAAd;MAOA,CARD,MAQO;QACN,KAAKH,MAAL,CAAYH,IAAZ,GAAmB,KAAKZ,aAAL,EAAnB;;QACA,KAAKe,MAAL,CAAYI,MAAZ;MACA;IACD;;SApEmBxC,S"}